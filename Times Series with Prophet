#***************************************************************************
#***************************************************************************
# LIMPAR VARIÁVEIS

rm(list = ls(all.names = TRUE))
getwd()

# Carregando as bibliotecas necessárias
library("gt")
library('readxl')
library('openxlsx')
library('readxl')
library('ggplot2')
library('magrittr')
library('stringr')
library('chron')
library('rJava')
library("lubridate")
library('dplyr')
library('tidyr')
library('purrr')
library('forecast')
library('xts')
library('zoo')
library('prophet')
library('matrixStats')

getwd()

letra<- getwd()

letra<- str_sub(letra, start = 1, end = 1) 
dir<- paste0(letra,':/Passageiros')

# definir diretório de trabalho e opções
setwd(dir)

path <- 'passageiros-cap7-anual-21.xlsx'

df<- path %>%
  excel_sheets() %>%
  set_names() %>%
  map_df(~ read_excel(path = path, sheet = .x, col_names = FALSE), 
         .id = "MES")

df

colnames(df)<- df[2,]

str(df)

df<- df[-1:-2,]

df<- df[,c(2,3,16,19,20)]

str(df)

df<- df[complete.cases(df),]

df_original<- df

df<- df[df$`NOME DA EMPRESA`=='Y1',]
#df<- df[df$`NOME DA EMPRESA`=='Y2',]

#          df$`NOME DA EMPRESA`=='Y3',]
        
#df<- df[df$`NOME DA EMPRESA`=='Y3',]
#df<- df[df$`NOME DA EMPRESA`=='Y2',]

#df <- subset(df, `NOME DA EMPRESA`== 'Y1')
head(df)

DRIVE<- unique(df$`NOME DA EMPRESA`)


# Preparando os dados para o Prophet
colnames(df)<- c('ds', 'EMPRESA','TOTAL PASS','RECEITA',
                 'TOTAL ECON')

df<- mutate_at(.tbl = df, .vars = c('TOTAL PASS',
                                    'RECEITA', 
                                    'TOTAL ECON'),
               .funs = as.numeric)

df$ds<- as.Date(df$ds, origin = '1899-12-30', format = '%d/%m/%Y')

str(df)

df<- df %>%
  group_by(ds) %>%
  summarise(`TOTAL PASS` =sum(`TOTAL PASS`),
            RECEITA = sum(RECEITA),
            `TOTAL ECON` = sum(`TOTAL ECON`))

head(df)
tail(df)

df<- xts::last(x = df, 90)

dim(df)

ultimo_dia<- xts::last(df$ds)

`%not_in%` <- purrr::negate(`%in%`)

df<- df[df$ds %not_in% ultimo_dia,]
head(df)
tail(df)

MES<- month(last(df$ds))
DAY<- day(last(df$ds))
dias_a_frente<- days_in_month(MES)-DAY
dias_a_frente<- as.numeric(dias_a_frente)
dias_a_frente

#df[90,3]<- 106999

ggplot(df, mapping = aes(x= ds, y = RECEITA))+
  theme_minimal()+
  geom_point()+
  geom_line()+
  ggtitle('RECEITA versus Dia')+
  theme(
    plot.title = element_text(size=17, face="bold", hjust = 0.5))

df_TOTAL_PASS<- df %>%select(ds,`TOTAL PASS`)%>%
  set_colnames(c('ds','y'))

df_RECEITA<- df %>%select(ds,RECEITA)%>%
  set_colnames(c('ds','y'))

df_TOTAL_ECON<- df %>%select(ds,`TOTAL ECON`)%>%
  set_colnames(c('ds','y'))

# Inserindo os Feriados no modelo

holidays <- tibble(
  holiday = c('feriado'),
  ds = as.Date(c('2020-09-07','2020-10-12', '2020-11-02', '2020-11-20',
                 '2020-12-24','2020-12-25', '2020-12-31', '2020-12-30',
                 '2021-01-01','2021-04-02','2021-04-21','2021-06-03')),
  lower_window = 0,
  upper_window = 1
)

holidays

receita_model<- prophet(df_RECEITA, 
            seasonality.mode = 'multiplicative',
            daily.seasonality = TRUE, 
            holidays = holidays)
#,seasonality.prior.scale = 10,
#changepoint.prior.scale = 0.5)

total_model<- prophet(df_TOTAL_PASS, 
                        seasonality.mode = 'multiplicative',
                        daily.seasonality = TRUE, 
                        holidays = holidays)


econ_model<- prophet(df_TOTAL_ECON, 
                        seasonality.mode = 'multiplicative',
                        daily.seasonality = TRUE, 
                        holidays = holidays)

future<- make_future_dataframe(receita_model, 
                               periods = dias_a_frente, 
                               freq = 'day')

head(future)
tail(future)

receita_forecast<- predict(receita_model, future)
eco_forecast<- predict(econ_model, future)
total_forecast<- predict(total_model, future,)

dyplot.prophet(receita_model, receita_forecast)

#prophet_plot_components(receita_model, receita_forecast)

#cross validation
#cv<- prophet::cross_validation(model = receita_model,
#                          horizon = 7,
#                          units  ='days',
#                          initial = 82)

#cv$cutoff

#performance_metrics(cv, metric = 'mape', rolling_window = 0.1)
#plot_cross_validation_metric(cv, metric =  'mape')

#cv<- cv[,c(2,1,3)]      

#cv$diff<- cv$yhat-cv$y

#plot(cv$diff)

#cv1<- cv[,c(-3,-4)]
#cv1$grupo<- 'real'
#colnames(cv1)<- c('ds','y')
#cv1

#cv2<- cv[,c(-2,-4)]
#cv2$grupo<- 'Prophet'
#colnames(cv2)<- c('ds','y')

#cv<- bind_rows(cv1, cv2)
#colnames(cv)<- c('ds','y','grupo')


#Plot cross valitation
require(ggplot2)
##The values Year, Value, School_ID are
##inherited by the geoms
#ggplot(cv, aes(ds,y ,colour=grupo)) + 
#  geom_line() + 
#  geom_point()

#******---->>>> Get the residuals
#fpred <- df %>% left_join(total_forecast,by="ds")
#fpred$resid <- fpred$`TOTAL PASS` - fpred$yhat
# Plot the residuals
#ggplot(fpred,aes(ds,resid)) + 
#  geom_point() + geom_smooth() + 
#  ggtitle("Prophet with Seasonality and Regressors",
#          subtitle = paste0("RMSE: ",round(sqrt(mean(fpred$resid^2)),2)))

#lapply(list(econ_model,
#            total_model,
#            receita_model), predict,... = future)

forecast<- bind_cols(eco_forecast$ds,total_forecast$yhat,
                     receita_forecast$yhat,
                     eco_forecast$yhat)

colnames(forecast)<- c('ds','TOTAL PASS','RECEITA',
'TOTAL ECON')

forecast

MES_ATUAL<- df[month(df$ds)==MES,]

FORECAST<- tail(forecast[,],dias_a_frente)
#colnames(FORECAST)<- c('ds','y')
str(FORECAST)

completo<-rbind(MES_ATUAL,FORECAST)
completo$DRIVE<- DRIVE
completo<- completo[,c(5,1,2,3,4)]

openxlsx::write.xlsx(completo, 
                     paste0(DRIVE,' forecast_cap-7_22-06-21.xlsx'))

#******************

df_original$DATA<- parse_date_time(df_original$DATA, "dmy")
df_original$DATA<- as.yearmon(df_original$DATA)

df_original<- df_original[complete.cases(df_original),]

#df_original<- df_original[order(df_original$DATA),]
#df_original<- arrange(df_original,DATA)

#df_original$`MES E ANO`<- paste(year(df_original$DATA), month(df_original$DATA),sep = "-")

colnames(df_original)<- c('DATA', 'EMPRESA','TOTAL PASS',
                          'RECEITA', 'TOTAL ECON')

df_original$RECEITA<- as.numeric(df_original$RECEITA)
df_original$`TOTAL PASS`<- as.numeric(df_original$`TOTAL PASS`)
df_original$`TOTAL ECON`<- as.numeric(df_original$`TOTAL ECON`)

str(df_original)

TOTAL_MES<- df_original %>%
  group_by(DATA,EMPRESA) %>%
  summarise(RECEITA = sum(RECEITA),
            `TOTAL PASS` = sum(`TOTAL PASS`),
            `TOTAL ECON` = sum(`TOTAL ECON`))

openxlsx::write.xlsx(TOTAL_MES, 'totalizacao.xlsx')
